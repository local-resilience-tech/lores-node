server {
    listen       80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    rewrite ^/admin$ /admin/ permanent;
    location /admin/ {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /admin/index.html;
    }

    location /admin_backend/ {
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   Host             $host;

        proxy_pass http://pibasho-backend:8000;

        # rewrite rule to strip /admin_backend from the request
        rewrite ^/admin_backend/(.*)$ /$1 break;
    }

    # Something like this will work for the graphql backend
    #
    # location /graphql/ {
    #     proxy_set_header   X-Real-IP        $remote_addr;
    #     proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    #     proxy_set_header   Host             $host;

    #     proxy_pass http://127.0.0.1:5010/;
    # }

    location /admin_backend/ {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /admin/index.html;
    }

    # Hard coded routes for Scrib. This is a temporary solution
    # We want app configuration to be dynamic but also we can't
    # have apps supplying their own nginx configuration
    location /books/ {
	    root /usr/share/nginx/html/apps;
	    index index.html index.html;
	    try_files $uri $uri/ /books/index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
